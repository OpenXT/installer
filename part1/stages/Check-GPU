#!/bin/ash
#
# Copyright (c) 2013 Citrix Systems, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

. ${SCRIPT_DIR}/functions
not_previous || exit ${Previous}

# check_gfx:
# Returns true if GPU recognised as Intel:

check_gfx()
{
    for i in /sys/bus/pci/devices/*; do
        if [ -d $i ]; then
            if grep -q '3....$' $i/class; then
                vendor=$(cat $i/vendor)
                case $vendor in
                    "0x8086"|"0x8087") return 0;;
                esac
            fi
        fi
    done

    echo "Warning: no Intel GPU was found, graphics performance will be degraded.">&2
    return 1
}

GPU_OK=0
check_gfx || GPU_OK=1

interactive || exit ${Continue}

if [ ${GPU_OK} -ne 0 ] ; then
    dialog --colors --yes-label "Continue" --no-label "Abort" --yesno \
"      \ZbWarning: no Intel GPU was found\ZB

   Graphics performance will be degraded" 8 48
    OPT=$?
    [ ${OPT} -eq 1 ] && exit ${Abort}
    [ ${OPT} -eq 255 ] && exit ${Previous}
    echo "Ignoring unrecognised graphics device.">&2
fi

# Sourced from https://stackoverflow.com/a/8811800
# BusyBox capable substring search
# Try to remove the search substring from the search target string
# If the stripped string is the same as the original target, substing was not found
contains() {
    local string="$1"
    local substring="$2"
    [ "${string#*$substring}" != "$string" ]
}

check_vga()
{
    local onboard_pci="$(lspci -s 00: -d ::0300 | awk '{print $1}')"
    for boot_vga in $(find /sys/ -name boot_vga); do
        if contains "$boot_vga" "$onboard_pci"; then
            [ "$(cat $boot_vga)" -eq "1" ] || return 1
            break
        fi
    done
}


warning=0
if check_vga; then
    msg="Onboard VGA device is boot VGA device"
else
    msg="Onboard VGA device is NOT boot VGA device"
    warning=1
fi

echo -e ${msg} >&2

if ! interactive ; then
    [ "${warning}" -ne "1" ] || echo -e "\nWARNING: $msg Check the BIOS settings.\n">&2
else
    if [ "${warning}" -eq "1" ] ; then
        DIALOGRC="${DIALOG_WARN_RC}" \
            dialog --colors --yes-label "Continue" \
                            --no-label  "Abort" \
                   --yesno "$msg\n
  \ZbYou should check your BIOS settings.\ZB\n
\n
The UIVM only displays via the onboard VGA device,\n
either change boot VGA device in the BIOS or change primary display after installation completes.\n
\n
To change BIOS settings:\n\n
 1. Reboot and enter the BIOS configuration.\n
 2. Set boot VGA device to the onboard VGA device.\n
 3. \ZbPower OFF the machine completely.\ZB\n
\n" 0 0
    OPT=$?
    [ "${OPT}" != 255 ] || exit ${Previous}
    [ "${OPT}" == 0 ]   || exit ${Abort}

    fi
fi

exit ${Continue}

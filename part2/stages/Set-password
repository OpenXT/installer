#!/bin/ash
#
# Copyright (c) 2011 Citrix Systems, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

. ${SCRIPT_DIR}/functions

unset PLAIN_TEXT_PASSWORD

if answerfile_specifies "password" ; then
    not_previous || exit ${Previous}

    PASSWORD=$(read_xml_tag "${ANSWERFILE}" "password")
    DEFER_PASSWORD=$(read_xml_attr "${ANSWERFILE}" "password" "defer")

    if [ "${DEFER_PASSWORD}" = "true" ] ; then
        if [ "${PASSWORD}" ] ; then
            echo "ERROR: answerfile specifies that password configuration" \
                 "should be deferred but also specifies password" >&2
            exit "${Abort}"
        fi

        # Password configuration deferred until first boot. Set an invalid
        # password to prevent login until password has been set.
        PASSWORD='!'
    else
        # Do not validate PASSWORD. Empty is acceptable.
        DEFER_PASSWORD=false
    fi

else

    if ! interactive ; then
        echo "Answerfile omits <password> : aborting">&2
        exit ${Abort}
    fi

    while [ 1 ] ; do
        show_cursor

        CAPTURE=$(mktemp -t)
        dialog --cancel-label Previous --insecure --passwordbox "Please enter a new password for the system" 0 50 "" 2>${CAPTURE}

        OPT="$?"
        if [ ${OPT} != 0 ] ; then
            rm -f ${CAPTURE}
            [ ${OPT} != 1 ]   || exit ${Previous}
            [ ${OPT} != 255 ] || exit ${Previous}
            exit ${Abort}
        fi

        REPEAT=$(mktemp -t)
        dialog --cancel-label Previous --insecure --passwordbox "Please enter the same password to confirm" 0 50 "" 2>${REPEAT}

        OPT="$?"
        if [ ${OPT} != 0 ] ; then
            rm -f ${CAPTURE}
            rm -f ${REPEAT}
            [ ${OPT} != 1 ]   || exit ${Previous}
            [ ${OPT} != 255 ] || exit ${Previous}
            exit ${Abort}
        fi

        PLAIN_TEXT_PASSWORD=$(cat ${CAPTURE})

        if [ -z "${PLAIN_TEXT_PASSWORD}" ] ; then
            rm -f ${CAPTURE}
            rm -f ${REPEAT}
            hide_cursor
            dialog --colors --ok-label Continue --msgbox '  \ZbERROR:\ZB Empty password!\n\n    Please try again.' 7 30
            continue
        fi

        if diff -q ${CAPTURE} ${REPEAT} 2>/dev/null ; then
            rm -f ${CAPTURE}
            rm -f ${REPEAT}
            break
        fi
        rm -f ${CAPTURE}
        rm -f ${REPEAT}

        hide_cursor

        dialog --ok-label Continue --msgbox "ERROR: Passwords did not match. Please try again." 0 0
    done

    # Unfortunately, we will need the plain text password afterwards.
    PASSWORD=`echo -n ${PLAIN_TEXT_PASSWORD} | openssl passwd -1 -stdin`
    DEFER_PASSWORD=false
fi

# From here we only deal with password's hash.
echo -n "${PASSWORD}" > ${PASSWORD_HASH}
[ "${DEFER_PASSWORD}" = "true" ] && touch ${PASSWORD_DEFERRED}

exit ${Continue}
